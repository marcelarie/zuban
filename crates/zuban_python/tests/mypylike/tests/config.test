[case mypy_ini_exclude_simple]
# Copied from testCmdlineExclude
[file lala/apkg.py]
1()
[file b/bpkg.py]
1()  # E: "int" not callable
[file c/cpkg.py]
1()  # E: "int" not callable
[file mypy.ini]
\[mypy]
exclude = lala

[case mypy_toml_exclude_simple]
[file lala/apkg.py]
1()
[file b/bpkg.py]
1()  # E: "int" not callable
[file c/cpkg.py]
1()  # E: "int" not callable
[file pyproject.toml]
\[tool.mypy]
exclude = "lala"

[case mypy_toml_exclude_list]
[file lala/apkg.py]
1()
[file b/bpkg.py]
1()
[file c/cpkg.py]
1()  # E: "int" not callable
[file pyproject.toml]
\[tool.mypy]
exclude = [
    "lala",
    "b/.*pkg",
]

[case mypy_ini_exclude_multi_line_verbose_regex]
[file lala/apkg.py]
1()
[file b/bpkg.py]
1()
[file c/cpkg.py]
1()  # E: "int" not callable
[file mypy.ini]
\[mypy]
exclude = (?x)(
    ^apkg\.py$    # files named "one.py"
    | ^b/   # or files starting with "three."
  )

[case mypy_ini_exclude_multi_line_verbose_regex_not_working]
[file lala/apkg.py]
1()  # E: "int" not callable
[file b/bpkg.py]
1()  # E: "int" not callable
[file c/cpkg.py]
1()  # E: "int" not callable
[file mypy.ini]
\[mypy]
exclude = (
    ^apkg\.py$    # files named "one.py"
    | ^b/   # or files starting with "three."
  )

[case mypy_toml_exclude_with_overrides_inheritance]
[file lala/a/apkg.py]
1()
[file lala/a/other.py]
1()  # E: "int" not callable
[file lala/a/inherited_exclude.py]
1()
[file lala/a/bpkg.py]
1()
[file lala/b/cpkg.py]
1()  # E: "int" not callable
[file pyproject.toml]
\[tool.mypy]
exclude = "lala/a.*pkg"
\[[tool.mypy.overrides]]
module = 'lala.a.*'
exclude = "inherited_exclude"

[case mypy_ini_excluded_file_can_have_syntax_errors]
[file m.py]
1[]
[file n.py]
1[]  # E: invalid syntax
[file mypy.ini]
\[mypy]
exclude = m

[case mypy_setup_ini_with_multiline_string]
# See also https://github.com/zonyitoo/rust-ini/issues/138
def foo(x: int = None) -> None: ...
foo(1)
foo(None)

[file mypy.ini]
[section1]
a =
  b
  c
[mypy]
implicit_optional = True

[case invalid_directives]
# mypy: always-false="FOO,BAR";,
# mypy: always-false="FOO,BAR""bla",
# mypy: "always-true=foo"
[out]
main:1: error: Content after quote in configuration comment
main:3: error: Content after quote in configuration comment
main:3: error: Quotes should not be part of the key
main:3: error: Unrecognized option: "always_true = oo"
