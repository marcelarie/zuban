[case basic_goto]
#? goto
from m import f

a = 1

#? goto 
a

#? goto
f
#? goto --follow-imports
f

#? infer
f

[file m.py]

def f(): ...

[out]
__main__.py:2:goto -> m.py:2:4
__main__.py:7:goto -> __main__.py:4:0
__main__.py:10:goto -> __main__.py:2:14
__main__.py:12:goto -> m.py:2:4
__main__.py:15:infer -> m.py:2:4

[case goto_with_bytes]
import dataclasses
#? --nth-utf8-byte 47 goto

dataclasses

# out of scope
#? --nth-utf8-byte 1000000000 goto
dataclasses
[out]
__main__.py:3:goto -> __main__.py:1:7
__main__.py:8:goto -> ()

[case invalid_nth_byte]
ä = 1
#? --nth-utf8-byte 1 goto

[out]
__main__.py:3:goto -> error: 1 is not a valid char boundary

[case goto_with_utf8_bytes]
ä𐍈ä = 1
a = 2
#? --utf8-bytes-column 8 goto
ä𐍈ä+a

#? --utf8-bytes-column 9 goto
ä𐍈ä+a

#? --utf8-bytes-column 1 goto
ä𐍈ä

# out of scope
#? --utf8-bytes-column 200 goto
a
str

[out]
__main__.py:4:goto -> __main__.py:1:0
__main__.py:7:goto -> __main__.py:2:0
__main__.py:10:goto -> error: Column 1 is not a valid char boundary on line "ä𐍈ä"
__main__.py:14:goto -> __main__.py:2:0

[case goto_with_utf16_code_units]
ä𐍈ä = 1
a = 2
#? --utf16-code-units-column 4 goto
ä𐍈ä+a

#? --utf16-code-units-column 5 goto
ä𐍈ä+a

# out of scope
#? --utf16-code-units-column 6 goto
a
str

[out]
__main__.py:4:goto -> __main__.py:1:0
__main__.py:7:goto -> __main__.py:2:0
__main__.py:11:goto -> __main__.py:2:0

[case goto_with_codepoint_column]
ä𐍈ä = 1
a = 2
#? --codepoint-column 3 goto
ä𐍈ä+a

#? --codepoint-column 4 goto
ä𐍈ä+a

# out of scope
#? --codepoint-column 200 goto
a
str

[out]
__main__.py:4:goto -> __main__.py:1:0
__main__.py:7:goto -> __main__.py:2:0
__main__.py:11:goto -> __main__.py:2:0

[case goto_on_stub_package_both]
# pkgs: typedpkg, typedpkg-stubs
from typedpkg.sample import ex
from typedpkg.pkg.aaa import af

#? goto --follow-imports
ex
#? goto --follow-imports
af
#? goto --follow-imports --prefer-stubs
ex
#? goto --follow-imports --prefer-stubs
af
#? infer
ex
#? infer
af
#? infer --prefer-stubs
ex
#? infer --prefer-stubs
af

[out]
__main__.py:6:goto -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:8:goto -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:10:goto -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:12:goto -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:14:infer -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:16:infer -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:18:infer -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:20:infer -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4

[case goto_on_stub_package_only_python]
# pkgs: typedpkg
from typedpkg.sample import ex
from typedpkg.pkg.aaa import af

#? goto --follow-imports
ex
#? goto --follow-imports
af
#? goto --follow-imports --prefer-stubs
ex
#? goto --follow-imports --prefer-stubs
af
#? infer
ex
#? infer
af
#? infer --prefer-stubs
ex
#? infer --prefer-stubs
af

[out]
__main__.py:6:goto -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:8:goto -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:10:goto -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:12:goto -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:14:infer -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:16:infer -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4
__main__.py:18:infer -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:6:4
__main__.py:20:infer -> mypy/test-data/packages/typedpkg/typedpkg/pkg/aaa.py:1:4

[case goto_on_stub_package_only_stub]
# pkgs: typedpkg-stubs
from typedpkg.sample import ex
from typedpkg.pkg.aaa import af

#? goto --follow-imports
ex
#? goto --follow-imports
af
#? goto --follow-imports --prefer-stubs
ex
#? goto --follow-imports --prefer-stubs
af
#? infer
ex
#? infer
af
#? infer --prefer-stubs
ex
#? infer --prefer-stubs
af

[out]
__main__:3: error: Cannot find implementation or library stub for module named "typedpkg.pkg"
__main__.py:6:goto -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:8:goto -> __main__.py:3:29
__main__.py:10:goto -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:12:goto -> __main__.py:3:29
__main__.py:14:infer -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:16:infer -> ()
__main__.py:18:infer -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:2:4
__main__.py:20:infer -> ()

[case goto_on_stub_package_module_both]
# pkgs: typedpkg, typedpkg-stubs
from typedpkg import sample

#? goto --follow-imports
sample
#? goto --follow-imports --prefer-stubs
sample
#? infer
sample
#? infer --prefer-stubs
sample

[out]
__main__.py:5:goto -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:1:0
__main__.py:7:goto -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:1:0
__main__.py:9:infer -> mypy/test-data/packages/typedpkg/typedpkg/sample.py:1:0
__main__.py:11:infer -> mypy/test-data/packages/typedpkg-stubs/typedpkg-stubs/sample.pyi:1:0

[case simple_goto_file_that_has_stub]
import m
#? goto --show-qualified-name
m.C
#? goto --prefer-stubs --show-qualified-name
m.C
#? goto --show-qualified-name
m.C.f
#? goto --prefer-stubs --show-qualified-name
m.C.f

x = m.C()
#? --codepoint-column 3 goto --show-qualified-name
x.f(1)
#? --codepoint-column 3 goto --prefer-stubs --show-qualified-name
x.f(1)

[file m.py]

class C:
    def f(self, x: str): ...
[file m.pyi]
class C:
    def f(self, x: int, /): ...

[out]
__main__.py:3:goto -> m.py:2:6:m.c
__main__.py:5:goto -> m.pyi:1:6:m.c
__main__.py:7:goto -> m.py:3:8:m.C.f
__main__.py:9:goto -> m.pyi:2:8:m.C.f
__main__.py:13:goto -> m.py:3:8:m.C.f
__main__.py:15:goto -> m.pyi:2:8:m.C.f

[case simple_infer_file_that_has_stub]
import m
#? infer --show-qualified-name
m.C
#? infer --prefer-stubs --show-qualified-name
m.C
#? infer --show-qualified-name
m.C.f
#? infer --prefer-stubs --show-qualified-name
m.C.f

x = m.C()
#? --codepoint-column 3 infer --show-qualified-name
x.f(1)
#? --codepoint-column 3 infer --prefer-stubs --show-qualified-name
x.f(1)

[file m.py]

class C:
    def f(self, x: str): ...
[file m.pyi]
class C:
    def f(self, x: int, /): ...

[out]
__main__.py:3:infer -> m.py:2:6:m.c
__main__.py:5:infer -> m.pyi:1:6:m.c
__main__.py:7:infer -> m.py:3:8:m.C.f
__main__.py:9:infer -> m.pyi:2:8:m.C.f
__main__.py:13:infer -> m.py:3:8:m.C.f
__main__.py:15:infer -> m.pyi:2:8:m.C.f

[case lambda_qualified_name]
def f():
    #? goto --show-qualified-name
    x = lambda y: y
    #? goto --show-qualified-name
    x

[out]
__main__.py:3:goto -> __main__.py:3:15:__main__.y@3
__main__.py:5:goto -> __main__.py:3:4:__main__.x@3

[case goto_stub_directly_on_identifier_to_stubs]

[file m.py]
#? --codepoint-column 7 goto --prefer-stubs
class C:
    #? --codepoint-column 9 goto --prefer-stubs
    def f(self): ...

#? --codepoint-column 1 goto --prefer-stubs
x = 1

[file m.pyi]
#? --codepoint-column 7 goto --prefer-stubs
class C:
    #? --codepoint-column 9 goto --prefer-stubs
    def f(self): ...

#? --codepoint-column 1 goto --prefer-stubs
x: int

[out]
m.py:2:goto -> m.pyi:2:6
m.py:4:goto -> m.pyi:4:8
m.py:7:goto -> m.pyi:7:0
m.pyi:2:goto -> m.pyi:2:6
m.pyi:4:goto -> m.pyi:4:8
m.pyi:7:goto -> m.pyi:7:0

[case goto_stub_directly_on_identifier_to_non_stubs]

[file m.py]
#? --codepoint-column 7 goto
class C:
    #? --codepoint-column 9 goto
    def f(self): ...

#? --codepoint-column 1 goto
x = 1

[file m.pyi]
#? --codepoint-column 7 goto
class C:
    #? --codepoint-column 9 goto
    def f(self): ...

#? --codepoint-column 1 goto
x: int

[out]
m.pyi:2:goto -> m.py:2:6
m.pyi:4:goto -> m.py:4:8
m.pyi:7:goto -> m.py:7:0
m.py:2:goto -> m.py:2:6
m.py:4:goto -> m.py:4:8
m.py:7:goto -> m.py:7:0

[case goto_primary_target_function_execution]
from typing import Self
class X:
    z = 1
    def f(self) -> Self:
        return self

def x(x: X):
    #? --codepoint-column 7 goto --show-qualified-name
    x.f().z = 4
    #? --codepoint-column 8 goto --show-qualified-name
    x.f().z = 4
    #? --codepoint-column 9 goto --show-qualified-name
    x.f().z = 3
    #? --codepoint-column 10 goto --show-qualified-name
    x.f().z = 4

[out]
__main__.py:9:goto -> __main__.py:4:8:__main__.X.f
__main__.py:11:goto -> __main__.py:2:6:__main__.X
__main__.py:13:goto -> __main__.py:2:6:__main__.X
__main__.py:15:goto -> __main__.py:3:4:__main__.X.z

[case goto_stubs_package]

[file m/__init__.py]
#? --codepoint-column 7 goto --prefer-stubs
class C:
    #? --codepoint-column 9 goto --prefer-stubs
    def f(self): ...

#? --codepoint-column 1 goto --prefer-stubs
x = 1

[file m-stubs/__init__.pyi]
#? --codepoint-column 7 goto
class C:
    #? --codepoint-column 9 goto
    def f(self): ...

#? --codepoint-column 1 goto
x: int

[out]
m-stubs/__init__.pyi:2:goto -> m/__init__.py:2:6
m-stubs/__init__.pyi:4:goto -> m/__init__.py:4:8
m-stubs/__init__.pyi:7:goto -> m/__init__.py:7:0
m/__init__.py:2:goto -> m-stubs/__init__.pyi:2:6
m/__init__.py:4:goto -> m-stubs/__init__.pyi:4:8
m/__init__.py:7:goto -> m-stubs/__init__.pyi:7:0
